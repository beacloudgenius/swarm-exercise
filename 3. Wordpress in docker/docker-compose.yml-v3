version: "3"

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    deploy:
      placement:
        constraints:
          - node.hostname==myvm1
    labels:
      - NGINX_PROXY_SWARM_CONTAINER=true
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /data/local/nginx/vhost.d:/etc/nginx/vhost.d
      - /data/local/nginx/html:/usr/share/nginx/html
      - /data/local/certs:/etc/nginx/certs:ro
      - /data/local/nginx/nginx_log:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
    networks:
      - edge
    restart: always

  le-companion:
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /data/local/nginx/vhost.d:/etc/nginx/vhost.d
      - /data/local/nginx/html:/usr/share/nginx/html
      - /data/local/certs:/etc/nginx/certs:rw
      - /data/local/nginx/nginx_log:/var/log/nginx
    deploy:
      placement:
        constraints:
          - node.hostname==myvm1
    image: jrcs/letsencrypt-nginx-proxy-companion
    environment:
      - NGINX_PROXY_SWARM_CONTAINER=true
    networks:
      - edge

  wp:
    image: cloudgenius/myownwordpress
    environment:
      - VIRTUAL_HOST=proper.cloudgeni.us
      - LETSENCRYPT_HOST=proper.cloudgeni.us
      - LETSENCRYPT_EMAIL=nilesh@cloudgeni.us
      - WORDPRESS_DB_PASSWORD=example
    networks:
      - edge

  mysql:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=example
    networks:
      - edge

  redis:
    image: redis
    networks:
      - edge

volumes:
  certs:

networks:
  edge:
#    external: true
