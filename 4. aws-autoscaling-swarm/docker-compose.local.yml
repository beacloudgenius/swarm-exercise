version: "3.1"
services:


  traefik:
    image: traefik:v1.3.1
#    command: --entryPoints='Name:http Address::80 Redirect.EntryPoint:https' --entryPoints='Name:https Address::443 TLS' --defaultEntryPoints=http,https --acme.entryPoint=https --acme.email=nilesh@cloudgeni.us --acme.storage=/etc/traefik/acme/acme.json --acme.domains=cloudgenius.co --acme.onHostRule=true --docker --docker.swarmmode --docker.domain=cloudgenius.co --docker.watch
    ports:
      - 80:80
      - 443:443
    volumes:
      - /mnt/gluster/traefik_vol:/etc/traefik/acme
      - /var/run/docker.sock:/var/run/docker.sock
      - /mnt/gluster/traefik_vol/traefik.toml:/etc/traefik/traefik.toml
    networks:
      - traefik
    deploy:
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.port=8080"
        - "traefik.frontend.rule=Host:tra.fungibleclouds.com"
        - "traefik.frontend.passHostHeader=true"
        - "traefik.docker.network=traefik"
        - "traefik.backend.loadbalancer.method=wrr"
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure


  wp:
    image: wordpress:4.8.0-php7.1-apache
    volumes:
      - /mnt/gluster/wp-content:/var/www/html/wp-content
    secrets:
      - wp_db_password
    environment:
      - WORDPRESS_DB_USER=wp
      - WORDPRESS_DB_NAME=wp
      - WORDPRESS_DB_PASSWORD_FILE=/run/secrets/wp_db_password
      - WORDPRESS_DB_HOST=mariadb
    networks:
      - traefik
      - mariadb
    deploy:
      placement:
        constraints: [node.role == worker]
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.backend=wordpress"
        - "traefik.backend.circuitbreaker.expression=NetworkErrorRatio() > 0.5"
        - "traefik.backend.loadbalancer.swarm=true"
        - "traefik.backend.loadbalancer.method=wrr"
        - "traefik.backend.loadbalancer.sticky=true"
        - "traefik.port=80"
        - "traefik.frontend.rule=Host:cloudgenius.co"
        - "traefik.frontend.passHostHeader=true"
        - "traefik.docker.network=traefik"

  visualizer:
    image: dockersamples/visualizer:latest
#    ports:
#      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.port=8080"
        - "traefik.frontend.rule=Host:viz.fungibleclouds.com"
        - "traefik.frontend.passHostHeader=true"
        - "traefik.docker.network=traefik"
        - "traefik.backend.loadbalancer.method=wrr"
    networks:
      - traefik

  mariadb:
    image: mariadb:10.3
    volumes:
      - /mnt/gluster/mariadb_vol:/var/lib/mysql
#      - /mnt/gluster/mariadb_dump:/docker-entrypoint-initdb.d
    secrets:
      - wp_db_password
      - root_db_password
    environment:
      - MYSQL_USER=wp
      - MYSQL_DATABASE=wp
      - MYSQL_PASSWORD_FILE=/run/secrets/wp_db_password
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/root_db_password
    networks:
      - mariadb
    deploy:
      placement:
        constraints: [node.role == manager]
      replicas: 1
      restart_policy:
        condition: on-failure

secrets:
  wp_db_password:
    external: true
  root_db_password:
    external: true

#volumes:
#  - traefik_vol:/mnt/gluster/traefik_vol
#  - wp_content:/mnt/gluster/wp-content
#  - mariadb_vol:/mnt/gluster/mariadb_vol

networks:
  traefik:
    external: true
  mariadb:
    external: true
